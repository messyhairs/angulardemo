{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-customer/add-customer.component.css","webpack:///./src/app/add-customer/add-customer.component.html","webpack:///./src/app/add-customer/add-customer.component.ts","webpack:///./src/app/app-routing/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/customer-details/customer-details.component.css","webpack:///./src/app/customer-details/customer-details.component.html","webpack:///./src/app/customer-details/customer-details.component.ts","webpack:///./src/app/customer.service.ts","webpack:///./src/app/customer.ts","webpack:///./src/app/customer/customer.component.css","webpack:///./src/app/customer/customer.component.html","webpack:///./src/app/customer/customer.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<h3>Add Customer</h3>\\n<div [hidden]=\\\"submitted\\\">\\n    <form #addCustomerForm=\\\"ngForm\\\">\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"firstname\\\">First Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstname\\\" placeholder=\\\"Give Customer's FirstName\\\" \\n        required\\n        [(ngModel)]=\\\"customer.firstname\\\" name=\\\"firstname\\\" #firstname=\\\"ngModel\\\">\\n        <div [hidden]=\\\"firstname.valid || firstname.pristine\\\"\\n             class=\\\"alert alert-danger\\\">\\n            First Name is required\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"lastname\\\">Last Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastname\\\" placeholder=\\\"Give Customer's LastName\\\"\\n        required\\n        [(ngModel)]=\\\"customer.lastname\\\" name=\\\"lastname\\\" #lastname=\\\"ngModel\\\">\\n        <div [hidden]=\\\"lastname.valid || lastname.pristine\\\"\\n             class=\\\"alert alert-danger\\\">\\n            Last Name is required\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"age\\\">Age</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"age\\\" \\n        placeholder=\\\"Give Customer's Age\\\"\\n        required\\n        [(ngModel)]=\\\"customer.age\\\" name=\\\"age\\\" #age=\\\"ngModel\\\">\\n        <div [hidden]=\\\"age.valid || age.pristine\\\"\\n             class=\\\"alert alert-danger\\\">\\n            Age is required\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"btn-group btn-group-sm\\\">\\n      \\t<button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"goBack()\\\">Back</button>\\n      \\t<button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"addCustomer()\\\" [disabled]=\\\"!addCustomerForm.form.valid\\\">Add</button>\\n      </div>\\n    </form>\\n</div>\\n\\n<div [hidden]=\\\"!submitted\\\">\\n  <p>Submitted Successfully! -> <span class=\\\"badge badge-light\\\">{{customer.firstname}}  {{customer.lastname}}</span></p>\\n\\t<div class=\\\"btn-group btn-group-sm\\\">\\n    \\t<button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"goBack()\\\">Back</button>\\n    \\t<button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"newCustomer(); addCustomerForm.reset()\\\">Continue</button>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Customer } from '../customer';\nimport { CustomerService } from '../customer.service';\n\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-add-customer',\n  templateUrl: './add-customer.component.html',\n  styleUrls: ['./add-customer.component.css']\n})\n\nexport class AddCustomerComponent{\n\n  customer = new Customer();\n  submitted = false;\n\n  constructor(\n    private customerService: CustomerService,\n    private location: Location\n  ) { }\n\n  newCustomer(): void {\n    this.submitted = false;\n    this.customer = new Customer();\n  }\n\n addCustomer() {\n   this.submitted = true;\n   this.save();\n }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  private save(): void {\n    console.log(this.customer);\n    this.customerService.addCustomer(this.customer)\n        .subscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CustomerComponent } from '../customer/customer.component';\nimport { AddCustomerComponent } from '../add-customer/add-customer.component';\nimport { CustomerDetailsComponent } from '../customer-details/customer-details.component';\n\nconst routes: Routes = [\n   { \n     path: 'customers', \n     component: CustomerComponent \n   },\n   { \n     path: 'customer/add', \n     component: AddCustomerComponent \n   },\n   { \n     path: 'customers/:id', \n     component: CustomerDetailsComponent \n   },\n   { \n     path: '', \n     redirectTo: 'customers', \n     pathMatch: 'full'\n   }, \n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\n\nexport class AppRoutingModule {}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">  \\n      <h1>Angular HttpClient</h1>\\n      <ul class=\\\"nav justify-content-center\\\">\\n          <li class=\\\"nav-item\\\">\\n              <a routerLink=\\\"customers\\\" class=\\\"btn btn-light btn-sm\\\" role=\\\"button\\\" routerLinkActive=\\\"active\\\">Retrieve</a> \\n          </li>\\n          <li class=\\\"nav-item\\\">\\n              <a routerLink=\\\"customer/add\\\" class=\\\"btn btn-light btn-sm\\\" role=\\\"button\\\" routerLinkActive=\\\"active\\\">Create</a>\\n          </li>\\n      </ul>\\n      <hr>\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { FormsModule }   from '@angular/forms';\nimport { HttpClientModule }    from '@angular/common/http';\n\nimport { AppRoutingModule }     from './app-routing/app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { CustomerComponent } from './customer/customer.component';\nimport { CustomerDetailsComponent } from './customer-details/customer-details.component';\nimport { AddCustomerComponent } from './add-customer/add-customer.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CustomerComponent,\n    CustomerDetailsComponent,\n    AddCustomerComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<h4><span class=\\\"badge badge-light \\\">{{customer.id}}</span> -> {{customer.firstname}}</h4>\\n<div [hidden]=\\\"submitted\\\">\\n    <form (ngSubmit)=\\\"update()\\\" #detailCustomerForm=\\\"ngForm\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"firstname\\\">First Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstname\\\" required\\n        [(ngModel)]=\\\"customer.firstname\\\" name=\\\"firstname\\\" #firstname=\\\"ngModel\\\">\\n        <div [hidden]=\\\"firstname.valid || firstname.pristine\\\"\\n             class=\\\"alert alert-danger\\\">\\n            First Name is required\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"lastname\\\">Last Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastname\\\" required\\n        [(ngModel)]=\\\"customer.lastname\\\" name=\\\"lastname\\\" #lastname=\\\"ngModel\\\">\\n        <div [hidden]=\\\"lastname.valid || lastname.pristine\\\"\\n             class=\\\"alert alert-danger\\\">\\n            Last Name is required\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"age\\\">Age</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"age\\\" required\\n        [(ngModel)]=\\\"customer.age\\\" name=\\\"age\\\" #age=\\\"ngModel\\\">\\n        <div [hidden]=\\\"age.valid || age.pristine\\\"\\n             class=\\\"alert alert-danger\\\">\\n            Age is required\\n        </div>\\n      </div>\\n\\n      <div class=\\\"btn-group btn-group-sm\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"goBack()\\\">Back</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-dark\\\" (click)=\\\"update()\\\" [disabled]=\\\"!detailCustomerForm.form.valid\\\">Update</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"delete()\\\">Delete</button>\\n\\t    </div>\\n    </form>\\n</div>\\n \\n<div [hidden]=\\\"!submitted\\\">\\n    <p>{{message}}</p>\\n    <div class=\\\"btn-group btn-group-sm\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"goBack()\\\">Back</button>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Customer } from '../customer';\nimport { CustomerService } from '../customer.service';\n\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-customer-details',\n  templateUrl: './customer-details.component.html',\n  styleUrls: ['./customer-details.component.css']\n})\nexport class CustomerDetailsComponent implements OnInit {\n\n  customer = new Customer() ;\n  submitted = false;\n  message: string;\n\n  constructor(\n    private customerService: CustomerService,\n    private route: ActivatedRoute,\n    private location: Location\n  ) {}\n\n  ngOnInit(): void {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.customerService.getCustomer(id)\n      .subscribe(customer => this.customer = customer);\n  }\n\n  update(): void {\n    this.submitted = true;\n    this.customerService.updateCustomer(this.customer)\n        .subscribe(result => this.message = \"Customer Updated Successfully!\");\n  }\n\n  delete(): void {\n    this.submitted = true;\n    this.customerService.deleteCustomer(this.customer.id)\n        .subscribe(result => this.message = \"Customer Deleted Successfully!\");\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Customer } from './customer';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n  private customersUrl = 'http://localhost:8080/api/customers';  // URL to web api\n  constructor( \n    private http: HttpClient\n  ) { }\n\n  getCustomers (): Observable<Customer[]> {\n    return this.http.get<Customer[]>(this.customersUrl)\n  }\n\n  getCustomer(id: number): Observable<Customer> {\n    const url = `${this.customersUrl}/${id}`;\n    return this.http.get<Customer>(url);\n  }\n\n  addCustomer (customer: Customer): Observable<Customer> {\n    return this.http.post<Customer>(this.customersUrl, customer, httpOptions);\n  }\n\n  deleteCustomer (customer: Customer | number): Observable<Customer> {\n    const id = typeof customer === 'number' ? customer : customer.id;\n    const url = `${this.customersUrl}/${id}`;\n\n    return this.http.delete<Customer>(url, httpOptions);\n  }\n\n  updateCustomer (customer: Customer): Observable<any> {\n    return this.http.put(this.customersUrl, customer, httpOptions);\n  }\n}","export class Customer {\n    id: number;\n    firstname: string;\n    lastname: string;\n    age: number;\n}\n","module.exports = \"\"","module.exports = \"<h5>All Customers</h5>\\n<div *ngFor=\\\"let cust of customers\\\">\\n  <a [routerLink]=\\\"['/customers', cust.id]\\\" style=\\\"color:black\\\"><span class=\\\"badge badge-dark\\\">{{cust.id}}</span> -> {{ cust.firstname }}</a>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Customer } from '../customer';\nimport { CustomerService } from '../customer.service';\n\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\n\nexport class CustomerComponent  implements OnInit {\n\n  customers: Customer[];\n\n  constructor(private customerService: CustomerService) {}\n\n  ngOnInit(): void {\n     this.getCustomers();\n  }\n\n  getCustomers() {\n    return this.customerService.getCustomers()\n               .subscribe(\n                 customers => {\n                  console.log(customers);\n                  this.customers = customers\n                 }\n                );\n }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}